{"google":"UA-26203753-2","body":"# tuneefy #\r\n\r\ntuneefy is a music sharing service allowing you to easily share tracks and albums regardless of any music platforms.\r\n\r\n### http://tuneefy.com ###\r\n\r\n- - - -\r\n\r\n\r\nIn a nutshell, tuneefy is a server-side proxy that will aggregate results from different music APIs, and display the consolidated result as a tracks list or albums list. Each item can then be shared.\r\n\r\n## Server-side ##\r\n\r\nThree main actions are done server-side :\r\n\r\n  1. Reverse searching the query, when the user searches for a permalink (see below : [supported permalinks](#permalinks))\r\n  2. Querying music APIs and platforms for results\r\n  3. Sharing a specific result\r\n\r\n#### Reverse search ####\r\n\r\nThe proxy performs a reverse-search on the query to retrieve the real title, artist and name behind a permalink\r\n\r\nExample for the query \"http://open.spotify.com/track/5jhJur5n4fasblLSCOcrTp\" :\r\n```javascript\r\n    {\r\n        data: {\r\n            lookedUpPlatform: 1,\r\n            query: \"Kasabian+Test+Transmission\",\r\n            lookedUpItem: {\r\n                name: \"Test Transmission\",\r\n                artist: \"Kasabian\",\r\n                album: \"Kasabian\",\r\n                picture: null,\r\n                link: \"http://open.spotify.com/track/5jhJur5n4fasblLSCOcrTp\"\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\n#### Fecthing data ####\r\n\r\nThe server-side proxy retrieves tracks and albums listing from the different APIs and returns them in a common format.\r\n\r\nExample (returning data when proxying results from Deezer for the search \"Jackson\") :\r\n```javascript\r\n    {\r\n        data: [\r\n            {\r\n                title: \"Billie Jean\",\r\n                artist: \"Michael Jackson\",\r\n                album: \"HIStory - PAST, PRESENT AND FUTURE - Book I\",\r\n                picture: \"http://api.deezer.com/2.0/album/71623/image\",\r\n                link: \"http://www.deezer.com/track/540980\",\r\n                score: 1\r\n            },\r\n            {\r\n                title: \"Beat It\",\r\n                artist: \"Michael Jackson\",\r\n                album: \"HIStory - PAST, PRESENT AND FUTURE - Book I\",\r\n                picture: \"http://api.deezer.com/2.0/album/71623/image\",\r\n                link: \"http://www.deezer.com/track/541002\",\r\n                score: 0.910\r\n            },\r\n           \r\n              ...\r\n\r\n            {\r\n                title: \"Beat It\",\r\n                artist: \"Michael Jackson\",\r\n                album: \"Bad 25th Anniversary (Deluxe)\",\r\n                picture: \"http://api.deezer.com/2.0/album/5814021/image\",\r\n                link: \"http://www.deezer.com/track/59510131\",\r\n                score: 0.0899\r\n            }\r\n        ]\r\n    }\r\n```\r\n\r\n#### Sharing ####\r\n\r\nThe server creates a permanent share link (e.g. http://tuneefy.com/t/8r2h9 or http://tuneefy.com/a/3zlp9) upon request by the client.\r\n\r\n## Client-side ##\r\n\r\nThe main thing happening client-side is the aggregation of the proxied results to get a comprehensive list of results for the user.\r\n\r\nThe client calls the proxy for each platform the user wants to search on. This allows for :\r\n \r\n  * No cross-platform restriction on the APIs (all is done server-side)\r\n  * Results are being updated real-time when each call returns (no need to way until all calls are finished)\r\n  * Effective Caching\r\n\r\nUnfortunately, as a side-effect, rate-limited APIs limit the number of calls the proxy can make.\r\n\r\n#### Aggregation method ####\r\n\r\nAggregation is done client-side, in two steps :\r\n\r\n  1. `cleaning` Cleaning the title, artist, name of a track or album\r\n  2. `hashing` Creating a hash of these info for comparison\r\n\r\nCleaning includes trimming of course, and finding common patterns in the strings, such as :\r\n\r\n  * _(album version)_\r\n  * _(featuring ...)_\r\n  * _etc ..._\r\n\r\nThe following javascript regexp are used to find these patterns:\r\n\r\n```javascript\r\n    var regex_feat_p = /^(.*)(\\(|\\[)(\\s*)(feat\\s|feat\\.|featuring\\s|ft.|ft\\s)([^\\)^\\]]*)(\\)|\\])(.*)$/gi;\r\n    var regex_album_version = /^(.*)(\\(|\\[)(\\s*)(album\\sversion|version\\salbum)([^\\)^\\]]*)(\\)|\\])(.*)$/gi;\r\n```\r\n\r\nThe hash is currently a concatenation of the lowercased cleaned title, artist and name when available. All accented / non alphanumeric characters are replaced by their equivalent.\r\n\r\n## A word on patterns ##\r\n\r\nTo cut a long story short, I used :\r\n\r\n  * A `facade` patterns, with templates, to display the different pages\r\n  * A `proxy pattern` for the data handling from the different platforms\r\n  * An `event pooling` pattern in a (light) `MVC` pattern to display the results and aggregate them for the user\r\n\r\n<a name=\"permalinks\"></a>\r\n## Supported Permalinks ##\r\n\r\nThe following permalinks are supported when searching on tuneefy :\r\n\r\n  * __Deezer__ song link : http://www.deezer.com/listen-10236179\r\n  * __Deezer__ artist link : http://www.deezer.com/fr/music/radiohead\r\n  * __Deezer__ album link : http://www.deezer.com/fr/music/rjd2/deadringer-144183\r\n  * __Spotify__ song link : http://open.spotify.com/track/5jhJur5n4fasblLSCOcrTp or spotify:track:5jhJur5n4fasblLSCOcrTp\r\n  * __Spotify__ artist link : http://open.spotify.com/artist/6UUrUCIZtQeOf8tC0WuzRy or spotify:artist:6UUrUCIZtQeOf8tC0WuzRy\r\n  * __Spotify__ album link : http://open.spotify.com/album/2bRcCP8NYDgO7gtRbkcqdk or spotify:album:2bRcCP8NYDgO7gtRbkcqdk\r\n  * __Last.fm__ song link : http://www.last.fm/music/The+Clash/London+Calling/London+Calling\r\n  * __Last.fm__ album link : http://www.last.fm/music/The+Clash/London+Calling\r\n  * __Last.fm__ artist link : http://www.lastfm.fr/music/Sex+Pistols\r\n  * __Grooveshark__ verbose song link : http://grooveshark.com/s/Sweet+Sweet+Heartkiller/2GVBvD?src=5\r\n  * __Grooveshark__ album link : http://grooveshark.com/album/Impeccable+Blahs/1529354\r\n  * __Grooveshark__ artist link : http://grooveshark.com/artist/Say+Hi+To+Your+Mom/401373\r\n  * __Soundcloud__ simple song link : http://soundcloud.com/fuckmylife/radiohead-codex-deadmau5-cover\r\n  * __Hypemachine__ track link : http://hypem.com/item/1g079/\r\n  * __Youtube__ music link : http://www.youtube.com/watch?v=_FOyHhU0i7k\r\n  * __Rdio__ link : http://www.rdio.com/#/artist/Crash_Test_Dummies\r\n  * __Qobuz__ track link : http://player.qobuz.com/#!/track/5280111\r\n\r\n## tuneefy bookmarklet ##\r\n\r\nThe tuneefy bookmarklet is a quick and convenient way to share tuneefy links directly from the page you're listening music in.\r\n\r\nThe standard production bookmarklet code is :\r\n\r\n```javascript\r\n    javascript:(function(){tuneefy_bkmrklt=document.createElement('SCRIPT');tuneefy_bkmrklt.type='text/javascript';\r\n    tuneefy_bkmrklt.src='http://tuneefy.com/widget/share.js.php?x='+(Math.random());\r\n    document.getElementsByTagName('head')[0].appendChild(tuneefy_bkmrklt);})();\r\n```\r\n\r\nThe bookmarklet recognizes what you're listening to on the following platforms / websites :\r\n\r\n  * Deezer\r\n  * Jiwa\r\n  * Grooveshark\r\n  * Radionomy\r\n  * Stereomood\r\n  * Musicmaze\r\n  * Qobuz Player\r\n  * Rdio\r\n  * Youtube (only for tracks available on iTunes via Youtube)\r\n  * Myspace (music player and artist page - first track only)\r\n  * Spotify (in a web browser only)\r\n\r\n## Contact me ##\r\n\r\nDo not hesitate to drop me a line at tchap(@)tuneefy.com or to fork this repo and make pull requests.\r\n","tagline":"tuneefy is a unified way to share music with your friends, over various online music services","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Tuneefy"}